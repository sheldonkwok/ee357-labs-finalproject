/** ###################################################################
**     THIS BEAN MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : kbiPort.H
**     Project   : V9_1_2_51CN128
**     Processor : MCF51CN128CLK
**     Beantype  : KBI
**     Version   : Bean 01.089, Driver 01.19, CPU db: 3.00.014
**     Compiler  : CodeWarrior ColdFireV1 C Compiler
**     Date/Time : 6/9/2010, 3:22 PM
**     Abstract  :
**         This bean "KBI" implements the Freescale Keyboard 
**         Interrupt Module (KBI/KBD) which allows to catch events 
**         on choiced external pins. These pins share one KBI/KBD 
**         interrupt which can be caused by an events on the pins.
**     Settings  :
**         Keyboard                    : KBI1 
**         Used pins           
**         Pin 0                       : PTG7_KBI1P7_FB_D1
**         Pin 1                       : PTG3_KBI1P3_FB_A5_FB_AD5_SDA1
**         Pin 2                       : PTG2_KBI1P2_FB_A6_FB_AD6_SCL1
**         Pull resistor               : up
**         Generate interrupt on       : falling
**         Interrupt service           : Enabled
**         Interrupt                   : Vkeyboard
**         Interrupt Priority          : 120
**         Enable in init. code        : No
**         Events enabled in init.     : No
**     Contents  :
**         Enable       - void kbiPort_Enable(void);
**         Disable      - void kbiPort_Disable(void);
**         EnableEvent  - void kbiPort_EnableEvent(void);
**         DisableEvent - void kbiPort_DisableEvent(void);
**         GetVal       - byte kbiPort_GetVal(void);
**         SetEdge      - byte kbiPort_SetEdge(byte edge);
**         GetStatus    - bool kbiPort_GetStatus(void);
**
**     Copyright : 1997 - 2009 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __kbiPort
#define __kbiPort

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"

/* MODULE kbiPort. */

#include "Cpu.h"

/* PUBLISHED CONSTANTS for using together with GetVal method  */
#define kbiPort_NUM_swRT      0x01 /* Mask of Pin0 */
#define kbiPort_NUM_swLFT     0x02 /* Mask of Pin1 */
#define kbiPort_NUM_swUP      0x04 /* Mask of Pin2 */

/* PUBLISHED CONSTANTS for enabled pins */
#define kbiPort_swRT          0x80  /* Mask of Pin0*/
#define kbiPort_swLFT         0x08  /* Mask of Pin1*/
#define kbiPort_swUP          0x04  /* Mask of Pin2*/

/* Deprecated */
#define swRT                  0x01
#define swLFT                 0x02
#define swUP                  0x04

extern volatile bool kbiPort_EnEvent;  /* Enable/Disable events */

void kbiPort_Init(void);
/*
** ===================================================================
**     Method      :  kbiPort_Init (bean KBI)
**
**     Description :
**         Initializes the associated peripheral(s) and the beans 
**         internal variables. The method is called automatically as a 
**         part of the application initialization code.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

/* KBI1PE: KBIPE7=1,KBIPE3=1,KBIPE2=1 */
#define kbiPort_Enable() \
  ((KBI1PE |= 0x8C), (KBI1SC_KBACK = 1), (KBI1SC_KBIE = 1))

/*
** ===================================================================
**     Method      :  kbiPort_Enable (bean KBI)
**
**     Description :
**         Enables the bean - the external events are accepted.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/* KBI1PE: KBIPE7=0,KBIPE3=0,KBIPE2=0 */
#define kbiPort_Disable() \
  ((KBI1PE &= ~0x8C), (KBI1SC_KBIE = 0))

/*
** ===================================================================
**     Method      :  kbiPort_Disable (bean KBI)
**
**     Description :
**         Disables the bean - the external events are not accepted.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

__interrupt void kbiPort_Interrupt(void);
/*
** ===================================================================
**     Method      :  kbiPort_Interrupt (bean KBI)
**
**     Description :
**         The method services the interrupt of the selected peripheral(s)
**         and eventually invokes event(s) of the bean.
**         This method is internal. It is used by Processor Expert only.
** ===================================================================
*/

byte kbiPort_GetVal(void);

/*
** ===================================================================
**     Method      :  kbiPort_GetVal (bean KBI)
**
**     Description :
**         Returns the value of pins
**     Parameters  : None
**     Returns     :
**         ---             - The value of associated pins (bits ordered
**                           according to the bean list of pins)
** ===================================================================
*/

bool kbiPort_GetStatus(void);
/*
** ===================================================================
**     Method      :  kbiPort_GetStatus (bean KBI)
**
**     Description :
**         Gets and clears the interrupt flag. If the <Interrupt
**         service/event> property is set to "Enabled", interrupt flag
**         is cleared in the generated interrupt service routine, but
**         this method can be used for example to clear ongoing input
**         signal glitches.
**     Parameters  : None
**     Returns     :
**         ---             - Returns true if the interrupt flag is set,
**                           otherwise returns false
** ===================================================================
*/

#define kbiPort_EnableEvent() \
  (kbiPort_EnEvent = TRUE)
/*
** ===================================================================
**     Method      :  kbiPort_EnableEvent (bean KBI)
**
**     Description :
**         Enables on interrupts event. This method is available only
**         if Interrupts/events are enabled.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

#define   kbiPort_DisableEvent() \
  (kbiPort_EnEvent = FALSE)
/*
** ===================================================================
**     Method      :  kbiPort_DisableEvent (bean KBI)
**
**     Description :
**         Disables on interrupts event. This method is available only
**         if Interrupts/events are enabled.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

byte kbiPort_SetEdge(byte edge);
/*
** ===================================================================
**     Method      :  kbiPort_SetEdge (bean KBI)
**
**     Description :
**         Sets the sensitive edge. If all selected pins don't have the
**         same edge setting possibility, the method allows to set only
**         those edges that are common (possible to set for all
**         selected pins).
**     Parameters  :
**         NAME            - DESCRIPTION
**         edge            - Edge type:
**                           0 - falling edge
**                           1 - rising edge
**                           2 - both edges
**                           3 - low level
**                           4 - high level
**     Returns     :
**         ---             - Error code, possible codes:
**                           ERR_OK - OK
**                           ERR_RANGE - Value is out of range
** ===================================================================
*/


/* END kbiPort. */

#endif /* ifndef __kbiPort */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.06 [04.26]
**     for the Freescale ColdFireV1 series of microcontrollers.
**
** ###################################################################
*/
